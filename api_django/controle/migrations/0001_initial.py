# Generated by Django 5.0.1 on 2025-08-05 17:53

import controle.models
import datetime
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcaoSolicitacaoOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('hh_valor_fabricacao', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('hh_valor_levantamento', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('hh_valor_servico_pintura_revestimento', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('hh_valor_montagem', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('hh_valor_inspecao', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Demanda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnsaioCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EspecCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NivelCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='NomeDiligenciadorOS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NomeResponsavelExecucaoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PercentualCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentual', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RegimeOS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Regime de OS',
                'verbose_name_plural': 'Regimes de OS',
            },
        ),
        migrations.CreateModel(
            name='ResponsavelMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SetorUnidadeCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.CharField(blank=True, max_length=200, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Setor da Unidade',
                'verbose_name_plural': 'Setores das Unidades',
            },
        ),
        migrations.CreateModel(
            name='StatusBMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatusDMS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatusFRS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatusLevantamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Status de Levantamento',
                'verbose_name_plural': 'Status de Levantamento',
            },
        ),
        migrations.CreateModel(
            name='StatusMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Status de Material',
                'verbose_name_plural': 'Status de Material',
            },
        ),
        migrations.CreateModel(
            name='StatusOS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Status de OS',
                'verbose_name_plural': 'Status de OS',
            },
        ),
        migrations.CreateModel(
            name='StatusOSEletronica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Status de OS Eletrônica',
                'verbose_name_plural': 'Status de OS Eletrônica',
            },
        ),
        migrations.CreateModel(
            name='StatusOSManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Status de OS Manual',
                'verbose_name_plural': 'Status de OS Manual',
            },
        ),
        migrations.CreateModel(
            name='StatusProducao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Status de Produção',
                'verbose_name_plural': 'Status de Produção',
            },
        ),
        migrations.CreateModel(
            name='TipoCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoDocumentoSolicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Tipo de Documento de Solicitação',
                'verbose_name_plural': 'Tipos de Documento de Solicitação',
            },
        ),
        migrations.CreateModel(
            name='TipoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AprovadorCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cargo', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aprovadores_relacionados', to='controle.cliente')),
            ],
            options={
                'verbose_name': 'Aprovador do Cliente',
                'verbose_name_plural': 'Aprovadores do Cliente',
                'unique_together': {('cliente', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=100)),
                ('descricao', models.CharField(blank=True, max_length=200, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contratos_relacionados', to='controle.cliente')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
                'unique_together': {('cliente', 'numero')},
            },
        ),
        migrations.CreateModel(
            name='OpcaoEspecCQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.CharField(blank=True, max_length=200, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opcoes_espec_cq', to='controle.cliente')),
            ],
            options={
                'verbose_name': 'Opção Específica CQ',
                'verbose_name_plural': 'Opções Espec CQ',
                'unique_together': {('cliente', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='RegistroOS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_os', models.PositiveIntegerField(editable=False, unique=True)),
                ('data_solicitacao_os', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('data_emissao_os', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('prazo_execucao_servico', models.DateTimeField(blank=True, default=controle.models.default_prazo_execucao, null=True)),
                ('descricao_resumida', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('descricao_detalhada', models.TextField(blank=True, default='', max_length=2000, null=True)),
                ('existe_orcamento', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('peso_fabricacao', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('metro_quadrado_pintura_revestimento', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('valor_fabricacao', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_fabricacao', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_levantamento', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_levantamento', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_material_fabricacao', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_material_fabricacao', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_material_pintura', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_material_pintura', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_servico_pintura_revestimento', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_servico_pintura_revestimento', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_montagem', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_montagem', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_material_montagem', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_material_montagem', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_inspecao', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_inspecao', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_hh', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_hh', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_manutencao_valvula', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_manutencao_valvula', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('valor_servico_terceiros', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('havera_valor_servico_terceiros', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('soma_valores', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=15, null=True)),
                ('hh_previsao', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('data_aprovacao_assinatura_manual', models.DateTimeField(blank=True, null=True)),
                ('data_assinatura_eletronica_os', models.DateTimeField(blank=True, null=True)),
                ('numero_os_eletronica', models.IntegerField(blank=True, null=True)),
                ('opcoes_dms', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('opcoes_bms', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('opcoes_frs', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('opcoes_nf', models.CharField(blank=True, choices=[('', 'Selecione'), ('SIM', 'Sim'), ('NAO', 'Não')], default='', max_length=100, null=True)),
                ('soma_notas_fiscais', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=15, null=True)),
                ('saldo_final', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=15, null=True)),
                ('observacao', models.TextField(blank=True, default='', max_length=1000, null=True)),
                ('os_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id_demanda', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.demanda')),
                ('nome_cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.cliente')),
                ('nome_diligenciador_os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.nomediligenciadoros')),
                ('nome_responsavel_aprovacao_os_cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.aprovadorcliente')),
                ('nome_responsavel_execucao_servico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.nomeresponsavelexecucaoservico')),
                ('numero_contrato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.contrato')),
                ('status_regime_os', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.regimeos')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ordens_servico', to=settings.AUTH_USER_MODEL)),
                ('setor_unidade_cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.setorunidadecliente')),
            ],
            options={
                'verbose_name': 'Ordem de Serviço',
                'verbose_name_plural': 'Ordens de Serviço',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrdemCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ordem', models.CharField(max_length=100)),
                ('descricao', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordens_cliente', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'Ordem do Cliente',
                'verbose_name_plural': 'Ordens do Cliente',
            },
        ),
        migrations.CreateModel(
            name='NfVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_nota_fiscal_venda', models.CharField(max_length=100)),
                ('preco_nota_fiscal_venda', models.DecimalField(decimal_places=2, max_digits=15)),
                ('arquivo_anexo_nota_fiscal_venda', models.FileField(upload_to='anexos_nfvenda/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('data_nota_fiscal_venda', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_fiscais_venda', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'Nota Fiscal de Venda',
                'verbose_name_plural': 'Notas Fiscais de Venda',
            },
        ),
        migrations.CreateModel(
            name='NfSaida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_nota_fiscal_remessa_saida', models.CharField(max_length=100)),
                ('arquivo_anexo_nota_fiscal_remessa_saida', models.FileField(upload_to='anexos_nfsaida/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('data_nota_fiscal_remessa_saida', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_fiscais_saida', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'Nota Fiscal de Saída',
                'verbose_name_plural': 'Notas Fiscais de Saída',
            },
        ),
        migrations.CreateModel(
            name='Levantamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_levantamento', models.DateTimeField()),
                ('descricao_levantamento', models.TextField(max_length=500)),
                ('arquivo_anexo_levantamento', models.FileField(upload_to='anexos_levantamento/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'dwg'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levantamentos', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'Levantamento',
                'verbose_name_plural': 'Levantamentos',
            },
        ),
        migrations.CreateModel(
            name='Gmi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_gmi', models.DateTimeField()),
                ('descricao_gmi', models.TextField(max_length=400)),
                ('arquivo_anexo_gmi', models.FileField(upload_to='anexos_gmi/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gmis', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'GMI - Guia de Movimentação Interna',
                'verbose_name_plural': 'GMIs - Guias de Movimentação Interna',
            },
        ),
        migrations.CreateModel(
            name='Gme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_gme', models.DateTimeField()),
                ('descricao_gme', models.TextField(max_length=400)),
                ('arquivo_anexo_gme', models.FileField(upload_to='anexos_gme/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gmes', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'GME - Guia de Movimentação Externa',
                'verbose_name_plural': 'GMEs - Guias de Movimentação Externa',
            },
        ),
        migrations.CreateModel(
            name='DocumentoEntrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento_entrada', models.FileField(upload_to='documentos_entrada/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('numero_documento_entrada', models.CharField(max_length=100)),
                ('data_documento_entrada', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_entrada', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'Documento de Entrada',
                'verbose_name_plural': 'Documentos de Entrada',
            },
        ),
        migrations.CreateModel(
            name='DataPrevistaEntrega',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_prevista_entrega', models.DateTimeField()),
                ('descricao', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datas_previstas', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'Data Prevista de Entrega',
                'verbose_name_plural': 'Datas Previstas de Entrega',
            },
        ),
        migrations.CreateModel(
            name='AcaoSolicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('acao_solicitacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.acaosolicitacaooption')),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acoes_solicitacao', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'Ação de Solicitação',
                'verbose_name_plural': 'Ações de Solicitação',
            },
        ),
        migrations.CreateModel(
            name='Rtip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_rtip', models.DateTimeField()),
                ('descricao_rtip', models.TextField(max_length=400)),
                ('arquivo_anexo_rtip', models.FileField(upload_to='anexos_rtip/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rtips', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'RTIP - Relatório Técnico de Inspeção de Pintura',
                'verbose_name_plural': 'RTIPs - Relatórios Técnicos de Inspeção de Pintura',
            },
        ),
        migrations.CreateModel(
            name='Rtm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_rtm', models.DateTimeField()),
                ('descricao_rtm', models.TextField(max_length=400)),
                ('arquivo_anexo_rtm', models.FileField(upload_to='anexos_rtm/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rtms', to='controle.registroos')),
            ],
            options={
                'verbose_name': 'RTM - Relatório Técnico de Manutenção/Montagem',
                'verbose_name_plural': 'RTMs - Relatórios Técnicos de Manutenção/Montagem',
            },
        ),
        migrations.CreateModel(
            name='SolicitanteCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cargo', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitantes_relacionados', to='controle.cliente')),
            ],
            options={
                'verbose_name': 'Solicitante do Cliente',
                'verbose_name_plural': 'Solicitantes do Cliente',
                'unique_together': {('cliente', 'nome')},
            },
        ),
        migrations.AddField(
            model_name='registroos',
            name='nome_solicitante_cliente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.solicitantecliente'),
        ),
        migrations.CreateModel(
            name='Bms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_bms', models.CharField(max_length=100)),
                ('data_aprovacao_bms', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bms', to='controle.registroos')),
                ('status_bms', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusbms')),
            ],
            options={
                'verbose_name': 'BMS - Boletim de Medição do Serviço',
                'verbose_name_plural': 'BMS - Boletins de Medição do Serviço',
            },
        ),
        migrations.CreateModel(
            name='Dms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_dms', models.CharField(max_length=100)),
                ('data_aprovacao_dms', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dms', to='controle.registroos')),
                ('status_dms', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusdms')),
            ],
            options={
                'verbose_name': 'DMS - Demonstrativo de Medição do Serviço',
                'verbose_name_plural': 'DMS - Demonstrativos de Medição do Serviço',
            },
        ),
        migrations.CreateModel(
            name='Frs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_frs', models.CharField(max_length=100)),
                ('data_aprovacao_frs', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frs', to='controle.registroos')),
                ('status_frs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusfrs')),
            ],
            options={
                'verbose_name': 'FRS - Folha de Registro do Serviço',
                'verbose_name_plural': 'FRS - Folhas de Registro do Serviço',
            },
        ),
        migrations.AddField(
            model_name='registroos',
            name='status_levantamento',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statuslevantamento'),
        ),
        migrations.AddField(
            model_name='registroos',
            name='status_os',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusos'),
        ),
        migrations.AddField(
            model_name='registroos',
            name='status_os_eletronica',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusoseletronica'),
        ),
        migrations.AddField(
            model_name='registroos',
            name='status_os_manual',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusosmanual'),
        ),
        migrations.AddField(
            model_name='registroos',
            name='status_producao',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusproducao'),
        ),
        migrations.CreateModel(
            name='ControleQualidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade_cq', models.IntegerField(default=0)),
                ('tamanho_cq', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('texto_tamanho_cq', models.CharField(default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tipo_ensaio_cq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.ensaiocq')),
                ('nivel_inspecao_cq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.nivelcq')),
                ('opcoes_espec_cq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.opcaoespeccq')),
                ('percentual_cq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.percentualcq')),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='controles_qualidade', to='controle.registroos')),
                ('tipo_cq', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.tipocq')),
            ],
            options={
                'verbose_name': 'Controle de Qualidade',
                'verbose_name_plural': 'Controles de Qualidade',
            },
        ),
        migrations.CreateModel(
            name='DocumentoSolicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('documento_solicitacao', models.FileField(upload_to='documentos_solicitacao/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos_solicitacao', to='controle.registroos')),
                ('tipo_documento_solicitacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.tipodocumentosolicitacao')),
            ],
            options={
                'verbose_name': 'Documento de Solicitação',
                'verbose_name_plural': 'Documentos de Solicitação',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('registro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materiais', to='controle.registroos')),
                ('responsavel_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.responsavelmaterial')),
                ('status_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.statusmaterial')),
                ('tipo_material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.tipomaterial')),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materiais',
            },
        ),
        migrations.CreateModel(
            name='UnidadeCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.CharField(blank=True, max_length=200, null=True)),
                ('ativo', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidades_relacionadas', to='controle.cliente')),
            ],
            options={
                'verbose_name': 'Unidade do Cliente',
                'verbose_name_plural': 'Unidades do Cliente',
                'unique_together': {('cliente', 'nome')},
            },
        ),
        migrations.AddField(
            model_name='setorunidadecliente',
            name='unidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setores', to='controle.unidadecliente'),
        ),
        migrations.AddField(
            model_name='registroos',
            name='unidade_cliente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='controle.unidadecliente'),
        ),
        migrations.AlterUniqueTogether(
            name='setorunidadecliente',
            unique_together={('unidade', 'nome')},
        ),
    ]
