services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-controle_os_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network-dev
    restart: unless-stopped

  # Backend Django (Desenvolvimento)
  backend:
    build:
      context: ./api_django
      dockerfile: Dockerfile
    environment:
      - DEBUG=True
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-controle_os_dev}
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CREATE_SUPERUSER=${CREATE_SUPERUSER:-true}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin123}
    volumes:
      - ./api_django:/app
      - media_files_dev:/app/media
      - static_files_dev:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network-dev
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              python manage.py runserver 0.0.0.0:8000"

  # Frontend React (Desenvolvimento)
  frontend:
    build:
      context: ./frontend_react
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend_react:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - app-network-dev
    restart: unless-stopped

  # Redis (opcional, para cache)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - app-network-dev
    restart: unless-stopped

volumes:
  postgres_data_dev:
  media_files_dev:
  static_files_dev:
  redis_data_dev:

networks:
  app-network-dev:
    driver: bridge 