services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-controle_os}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    # Não expor porta em produção (apenas acesso interno)

  # Backend Django
  backend:
    build:
      context: ./api_django
      dockerfile: Dockerfile
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-controle_os}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - CREATE_SUPERUSER=${CREATE_SUPERUSER:-false}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@example.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin123}
    volumes:
      - media_files:/app/media
      - static_files:/app/staticfiles
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped
    # Não expor porta em produção (apenas via nginx)

  # Frontend React
  frontend:
    build:
      context: ./frontend_react
      dockerfile: Dockerfile
    volumes:
      - static_files_frontend:/usr/share/nginx/html
    networks:
      - app-network
    restart: unless-stopped
    # Não expor porta em produção (apenas via nginx)

  # Nginx com SSL
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_files_frontend:/usr/share/nginx/html:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped

  # Redis (opcional, para cache)
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    # Não expor porta em produção (apenas acesso interno)

volumes:
  postgres_data:
  media_files:
  static_files:
  static_files_frontend:
  redis_data:
  nginx_logs:

networks:
  app-network:
    driver: bridge 