version: '3.8'

services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: controle_db_dev
    environment:
      POSTGRES_DB: controle_registro_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - controle_network_dev

  # Redis para cache e sessÃµes
  redis:
    image: redis:7-alpine
    container_name: controle_redis_dev
    ports:
      - "6379:6379"
    networks:
      - controle_network_dev

  # Backend Django (Desenvolvimento)
  backend:
    build:
      context: ./api_django
      dockerfile: Dockerfile
    container_name: controle_backend_dev
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/controle_registro_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-django-insecure-dev-key}
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0
    volumes:
      - ./api_django:/app
      - static_files_dev:/app/staticfiles
      - media_files_dev:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - controle_network_dev
    command: >
      sh -c "python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              python manage.py runserver 0.0.0.0:8000"

  # Frontend React (Desenvolvimento)
  frontend:
    build:
      context: ./frontend_react
      dockerfile: Dockerfile.dev
    container_name: controle_frontend_dev
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_AUTH_URL=http://localhost:8000/api/auth
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend_react:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - controle_network_dev
    command: npm run dev

volumes:
  postgres_data_dev:
  static_files_dev:
  media_files_dev:

networks:
  controle_network_dev:
    driver: bridge
